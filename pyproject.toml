[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "egitim-paint-uygulamasi"
dynamic = ["version"]
description = "Türkçe arayüzlü, eğitim odaklı Paint uygulaması"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Bahattin Yunus Çetin", email = ""}
]
maintainers = [
    {name = "Bahattin Yunus Çetin", email = ""}
]
keywords = [
    "paint", "drawing", "graphics", "tkinter", "gui", 
    "education", "turkish", "python", "canvas", "art"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Topic :: Education",
    "Topic :: Multimedia :: Graphics :: Editors",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Natural Language :: Turkish",
    "Natural Language :: English",
]
requires-python = ">=3.6"
dependencies = [
    "Pillow>=8.0.0",
    "pyglet>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "pre-commit>=2.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
    "sphinx-autodoc-typehints>=1.12.0",
]

[project.urls]
Homepage = "https://github.com/bahattinyunuscetin/python_paint_project"
Documentation = "https://github.com/bahattinyunuscetin/python_paint_project/blob/main/demo1/README.md"
Repository = "https://github.com/bahattinyunuscetin/python_paint_project.git"
"Bug Tracker" = "https://github.com/bahattinyunuscetin/python_paint_project/issues"
"Source Code" = "https://github.com/bahattinyunuscetin/python_paint_project"

[project.scripts]
egitim-paint = "demo1.main:main"

[tool.setuptools]
packages = ["demo1"]

[tool.setuptools.package-data]
demo1 = ["*.png", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=demo1",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["demo1"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
